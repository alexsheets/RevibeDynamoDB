AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-DAD-allFunctions

  Sample SAM Template for sam-DAD-allFunctions


Parameters:
  DynamoDBTableName:
    Type: String
    Description: Name of the DynamoDB table to use in the function
  ApiGatewayId:
    Type: String
    Description: The Id of the API Gateway
  ApiGatewayResourceId:
    Type: String
    Description: Id of the Resource to create a method in for API Gateway.
  ApiGatewayAuthorizerId:
    Type: String
    Description: Id of the Cognito Authorizer for the API Gateway.
  AuthorizeListMethod:
    Type: String
    Description: Require authentication on the API Gateway list method?
    AllowedValues:
      - "Yes"
      - "No"
    Default: "No"
  AuthorizeRetrieveMethod:
    Type: String
    Description: Require authentication on the API Gateway retrieve method?
    AllowedValues:
      - "Yes"
      - "No"
    Default: "No"
  AuthorizeCreateMethod:
    Type: String
    Description: Require authentication on the API Gateway create method?
    AllowedValues:
      - "Yes"
      - "No"
    Default: "Yes"
  AuthorizeUpdateMethod:
    Type: String
    Description: Require authentication on the API Gateway update method?
    AllowedValues:
      - "Yes"
      - "No"
    Default: "Yes"
  AuthorizeDeleteMethod:
    Type: String
    Description: Require authentication on the API Gateway delete method?
    AllowedValues:
      - "Yes"
      - "No"
    Default: "Yes"
  SupportStackUrl:
    Type: String
    Default: "https://revibe-cf-templates.s3.amazonaws.com/SAM/Supplement/2020-10-28.yml"

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    CodeUri: hello_world/

Resources:

  ApiGatewayDetailsResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !Ref ApiGatewayResourceId
      PathPart: "{Id}"
      RestApiId: !Ref ApiGatewayId

  ListFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Handler: list.lambda_handler
      Runtime: python3.8
      Environment:
        Variables:
          tableName: !Ref DynamoDBTableName
  ListFunctionSupplement:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        FunctionName: ListFunction
        FunctionArn: !GetAtt ListFunction.Arn
        FunctionRoleId: !Ref ListFunctionRole
        DynamoDBTableName: !Ref DynamoDBTableName
        ApiGatewayId: !Ref ApiGatewayId 
        ApiGatewayResourceId: !Ref ApiGatewayResourceId
        ApiGatewayAuthorizerId: !Ref ApiGatewayAuthorizerId
        AuthorizeMethod: !Ref AuthorizeListMethod
        HttpMethod: GET
        DynamoDbPermissions: 
          Fn::Join:
            - ","
            - - "dynamodb:Scan"
              - "dynamodb:Query"
      # Tags:
      TemplateURL: !Ref SupportStackUrl #"https://revibe-cf-templates.s3.amazonaws.com/SAM/Supplement/2020-10-28.yml"
  
  RetrieveFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Handler: details.lambda_handler
      Runtime: python3.8
      Environment:
        Variables:
          tableName: !Ref DynamoDBTableName
  RetrieveFunctionSupplement:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        FunctionName: DetailsFunction
        FunctionArn: !GetAtt DetailsFunction.Arn
        FunctionRoleId: !Ref DetailsFunctionRole
        DynamoDBTableName: !Ref DynamoDBTableName
        ApiGatewayId: !Ref ApiGatewayId 
        ApiGatewayResourceId: !Ref ApiGatewayDetailsResource
        ApiGatewayAuthorizerId: !Ref ApiGatewayAuthorizerId
        AuthorizeMethod: !Ref AuthorizeRetrieveMethod
        HttpMethod: GET
        DynamoDbPermissions: 
          Fn::Join:
            - ","
            - - "dynamodb:GetItem"
      # Tags:
      TemplateURL: !Ref SupportStackUrl #"https://revibe-cf-templates.s3.amazonaws.com/SAM/Supplement/2020-10-28.yml"
  
  CreateFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Handler: create.lambda_handler
      Runtime: python3.8
      Environment:
        Variables:
          tableName: !Ref DynamoDBTableName
  CreateFunctionSupplement:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        FunctionName: CreateFunction
        FunctionArn: !GetAtt CreateFunction.Arn
        FunctionRoleId: !Ref CreateFunctionRole
        DynamoDBTableName: !Ref DynamoDBTableName
        ApiGatewayId: !Ref ApiGatewayId 
        ApiGatewayResourceId: !Ref ApiGatewayResourceId
        ApiGatewayAuthorizerId: !Ref ApiGatewayAuthorizerId
        AuthorizeMethod: !Ref AuthorizeCreateMethod
        HttpMethod: POST
        DynamoDbPermissions: 
          Fn::Join:
            - ","
            - - "dynamodb:PutItem"
      # Tags:
      TemplateURL: !Ref SupportStackUrl #"https://revibe-cf-templates.s3.amazonaws.com/SAM/Supplement/2020-10-28.yml"
  
  UpdateFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Handler: update.lambda_handler
      Runtime: python3.8
      Environment:
        Variables:
          tableName: !Ref DynamoDBTableName
  UpdateFunctionSupplement:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        FunctionName: UpdateFunction
        FunctionArn: !GetAtt UpdateFunction.Arn
        FunctionRoleId: !Ref UpdateFunctionRole
        DynamoDBTableName: !Ref DynamoDBTableName
        ApiGatewayId: !Ref ApiGatewayId 
        ApiGatewayResourceId: !Ref ApiGatewayDetailsResource
        ApiGatewayAuthorizerId: !Ref ApiGatewayAuthorizerId
        AuthorizeMethod: !Ref AuthorizeUpdateMethod
        HttpMethod: PATCH
        DynamoDbPermissions: 
          Fn::Join:
            - ","
            - - "dynamodb:UpdateItem"
      # Tags:
      TemplateURL: !Ref SupportStackUrl #"https://revibe-cf-templates.s3.amazonaws.com/SAM/Supplement/2020-10-28.yml"
  
  DeleteFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      Handler: delete.lambda_handler
      Runtime: python3.8
      Environment:
        Variables:
          tableName: !Ref DynamoDBTableName
  DeleteFunctionSupplement:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        FunctionName: DeleteFunction
        FunctionArn: !GetAtt DeleteFunction.Arn
        FunctionRoleId: !Ref DeleteFunctionRole
        DynamoDBTableName: !Ref DynamoDBTableName
        ApiGatewayId: !Ref ApiGatewayId 
        ApiGatewayResourceId: !Ref ApiGatewayDetailsResource
        ApiGatewayAuthorizerId: !Ref ApiGatewayAuthorizerId
        AuthorizeMethod: !Ref AuthorizeDeleteMethod
        HttpMethod: DELETE
        DynamoDbPermissions: 
          Fn::Join:
            - ","
            - - "dynamodb:DeleteItem"
      # Tags:
      TemplateURL: !Ref SupportStackUrl #"https://revibe-cf-templates.s3.amazonaws.com/SAM/Supplement/2020-10-28.yml"

Outputs:
  ListFunction:
    Description: "List Lambda Function ARN"
    Value: !GetAtt ListFunction.Arn
  ListFunctionIamRole:
    Description: "Implicit IAM Role created for List function"
    Value: !GetAtt ListFunctionRole.Arn

  RetrieveFunction:
    Description: "Retrieve Lambda Function ARN"
    Value: !GetAtt RetrieveFunction.Arn
  RetrieveFunctionIamRole:
    Description: "Implicit IAM Role created for Retrieve function"
    Value: !GetAtt RetrieveFunctionRole.Arn

  CreateFunction:
    Description: "Create Lambda Function ARN"
    Value: !GetAtt CreateFunction.Arn
  CreateFunctionIamRole:
    Description: "Implicit IAM Role created for Create function"
    Value: !GetAtt CreateFunctionRole.Arn

  UpdateFunction:
    Description: "Update Lambda Function ARN"
    Value: !GetAtt UpdateFunction.Arn
  UpdateFunctionIamRole:
    Description: "Implicit IAM Role created for Update function"
    Value: !GetAtt UpdateFunctionRole.Arn

  DeleteFunction:
    Description: "Delete Lambda Function ARN"
    Value: !GetAtt DeleteFunction.Arn
  DeleteFunctionIamRole:
    Description: "Implicit IAM Role created for Delete function"
    Value: !GetAtt DeleteFunctionRole.Arn